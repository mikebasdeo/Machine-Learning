setwd("D:/Programming/Python/workspace/Machine_Learning/Machine Learning A-Z Template Folder")
setwd("D:/Programming/Python/workspace/Machine_Learning/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing")
# Data Preprocessing
# import the dataset
dataset = read.csv("Data.csv")
View(dataset)
View(dataset)
View(dataset)
# Data Preprocessing
# import the dataset
dataset = read.csv("Data.csv")
# take care of missing data
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm =TRUE)),   dataset$Age)
# Data Preprocessing
# import the dataset
dataset = read.csv("Data.csv")
# take care of missing data
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm =TRUE)),   dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm =TRUE)),    dataset$Salary)
View(dataset)
View(dataset)
# Data Preprocessing
# import the dataset
dataset = read.csv("Data.csv")
# take care of missing data
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm =TRUE)),   dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm =TRUE)),    dataset$Salary)
View(dataset)
setwd("D:/Programming/Python/workspace/Machine_Learning/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing")
# Data Preprocessing
# import the dataset
dataset = read.csv("Data.csv")
# take care of missing data
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm =TRUE)),   dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm =TRUE)),    dataset$Salary)
setwd("D:/Programming/Python/workspace/Machine_Learning/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing")
setwd("D:/Programming/Python/workspace/Machine_Learning/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing")
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm =TRUE)),    dataset$Salary)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
# Data Preprocessing
# import the dataset
dataset = read.csv("Data.csv")
# take care of missing data
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm =TRUE)),   dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm =TRUE)),    dataset$Salary)
# Dummy encoding for MOF
dataset$Country = factor(dataset$Country, levels=c('France', 'Spain', 'Germany'), labels=c(1,2,3))
# Data Preprocessing
# import the dataset
dataset = read.csv("Data.csv")
# take care of missing data
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm =TRUE)),   dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm =TRUE)),    dataset$Salary)
# Dummy encoding for MOF
dataset$Country = factor(dataset$Country, levels=c('France', 'Spain', 'Germany'), labels=c(1,2,3))
# Dummy encoding for DVV
dataset$Purchased = factor(dataset$Purchased, levels=c('Yes', 'No'), labels=c(1,0))
library("base64enc", lib.loc="D:/Programs/Anaconda3/Lib/R/library")
detach("package:base64enc", unload=TRUE)
library("caTools", lib.loc="D:/Programs/Anaconda3/Lib/R/library")
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
# Data Preprocessing
# import the dataset
dataset = read.csv("Data.csv")
# take care of missing data
dataset$Age = ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm =TRUE)),   dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm =TRUE)),    dataset$Salary)
# Dummy encoding for MOF
dataset$Country = factor(dataset$Country, levels=c('France', 'Spain', 'Germany'), labels=c(1,2,3))
# Dummy encoding for DVV
dataset$Purchased = factor(dataset$Purchased, levels=c('Yes', 'No'), labels=c(1,0))
# Split data into training set and test set
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
View(training_set)
View(training_set)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(training_set)
View(training_set)
View(test_set)
View(test_set)
# Feature Scaling
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
